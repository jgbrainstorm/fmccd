#! /usr/bin/env python
"""
standalone code to calculate the mean dark current change between two images for a given number of extensions. The ccd file needs to be the standard DES ccd fits image with the convention of 1 extension corresponding to 2k x 4k with overscans on the sides.
Created by: Jiangang Hao @ Fermilab, 12/15/2010 
"""


import sys
if len(sys.argv) == 1:
    print 'syntax: darkchange refName newName'
else:
    import numpy as np
    import pylab as pl
    import pyfits as pf
    hdu=pf.open(sys.argv[1])
    nn=len(hdu)
    darkref=[]
    darknew=[]
    ext=[2,3,4,5,8,37,38,39,40,41,42,43,44,52,57,59,61]

    for i in ext:
        b=pf.getdata(sys.argv[1],i)
        hdr=pf.getheader(sys.argv[1],i)
        darkL=np.mean(b[1500:2000,400:440])-np.mean(b[1500:2000,10:50])
        darkR=np.mean(b[1500:2000,1400:1440])-np.mean(b[1500:2000,2110:2150])
        darkref.append(darkL)
        darkref.append(darkR)
    for i in ext:
        b=pf.getdata(sys.argv[2],i)
        hdr=pf.getheader(sys.argv[2],i)
        darkL=np.mean(b[1500:2000,400:440])-np.mean(b[1500:2000,10:50])
        darkR=np.mean(b[1500:2000,1400:1440])-np.mean(b[1500:2000,2110:2150])
        darknew.append(darkL)
        darknew.append(darkR)
    new=np.array(darknew)
    ref=np.array(darkref)
    change=(new-ref)/ref
    mchange=np.median((new-ref)/ref)
    ext=np.arange(len(change))
    pl.plot(ext,change,'bo')
    pl.xlabel('CCD Amps')
    pl.ylabel('fraction change w.r.t. ref')
    pl.hlines(mchange,ext[0],ext[-1],color='green',linestyle='dashed')
    pl.ylim(mchange-0.5,mchange+0.5)
    pl.title('Dark Current Analysis')
    pl.figtext(0.2,0.85,'median fractional change: '+str(np.round(mchange,4)))
    print 'median fractional change w.r.t. ref: ', mchange
    pl.show()
